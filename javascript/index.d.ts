declare function max(...args: number[]): number;
declare function min(...args: number[]): number;
declare function isEqual(a: number, b: number): boolean;
declare function isPrime(n: number): boolean;
declare function randInt(min: number, max?: number): number;
declare function randBool(): boolean;
declare function flatten(obj: any): any;
declare function sort(obj: number[] | string[]): number[] | string[];
declare function sortByKey<T>(object: T): T;
declare function sortByValue(object: any): any;
declare function shuffle<T>(array: T[]): T[];
declare function forEach(array: any[], cb: (element: any, index?: number) => void): void;
declare function replaceAll(string: string, search: string, replace: string): string;
declare function loop<T>(amount: number, cb: (i: number) => T): void;
declare function log(...args: any[]): void;
declare function type(value: any): string;
declare function id(id: string): HTMLElement | null;
declare function selector(name: string): HTMLElement | null;
declare class AtzukiDollar {
    private readonly version;
    id: Function;
    selector: Function;
    randInt: Function;
    randBool: Function;
    max: Function;
    min: Function;
    isEqual: Function;
    isPrime: Function;
    flatten: Function;
    sort: Function;
    sortByKey: Function;
    sortByValue: Function;
    shuffle: Function;
    forEach: Function;
    replaceAll: Function;
    loop: Function;
    log: Function;
    type: Function;
    constructor();
    get getVersion(): string;
}
